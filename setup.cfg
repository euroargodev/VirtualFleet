[metadata]
name = virtualfleet
author = VirtualFleet developers
author_email =
    kbalem@ifremer.fr
    gmaze@ifremer.fr
license = Apache
description = Virtual Argo float trajectories simulator
long_description_content_type=text/markdown
long_description =
    |<img src="https://raw.githubusercontent.com/euroargodev/virtualfleet/master/docs/img/repo_picture_tight.png" alt="VirtualFleet logo" width="400"/><br>``Virtual Fleet`` is a Python package to make and analyse simulations of virtual Argo float trajectories.|
    |:---------:|
    |[![Gitter](https://badges.gitter.im/Argo-floats/virtual-fleet.svg)](https://gitter.im/Argo-floats/virtual-fleet?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) ![Documentation](https://img.shields.io/static/v1?label=Doc&message=github.io&color=<COLOR>&logo=readthedocs) <br>
    ![parcels](https://img.shields.io/static/v1?labelColor=000&label=Parcels&message=ParticleSet&color=11aed5&logo=) ![parcels](https://img.shields.io/static/v1?labelColor=000&label=Parcels&message=kernels&color=aa11d5&logo=)|

    Using a 3D velocity fields, program your own Argo floats behaviour, set-up a
    deployment plan and simulate trajectories (and sampling) of your virtual
    fleet of Argo floats.

    **Virtual Fleet** uses [Parcels](http://oceanparcels.org/) to simulate Argo floats and to compute trajectories.
    **Virtual Fleet** provides methods to easily set up a deployment plan, float parameters and to analyse trajectories.

    ### Documentation

    Checkout the documentation at: https://euroargodev.github.io/VirtualFleet

    ### Usage

    [![Binder](https://img.shields.io/static/v1.svg?logo=Jupyter&label=Binder&message=Click+here+to+try+VirtualFleet+online+!&color=blue&style=for-the-badge)](https://mybinder.org/v2/gh/euroargodev/binder-sandbox/main?urlpath=git-pull%3Frepo%3Dhttps%253A%252F%252Fgithub.com%252Feuroargodev%252FVirtualFleet%26urlpath%3Dlab%252Ftree%252FVirtualFleet%252Fexamples%252Ftry_it-CustomPlans.ipynb%26branch%3Dpackaging)

    ### Why Virtual Fleet?

    The optimisation of the Argo array is quite complex to determine in specific regions, where the local ocean dynamic shifts away from *standard* large scale open ocean. These regions are typically the Western Boundary Currents where turbulence is more significant than anywhere else, and Polar regions where floats can temporarily evolve under sea-ice. **Virtual Fleet** aims to help the Argo program to optimise floats deployment and programming in such regions.

    ***
    "Virtual Fleet" is part of the Euro-ArgoRISE project. This project has received funding from the European Unionâ€™s Horizon 2020 research and innovation programme under grant agreement no 824131. Call INFRADEV-03-2018-2019: Individual support to ESFRI and other world-class research infrastructures.
    <div>
    <a href="https://www.euro-argo.eu/EU-Projects/Euro-Argo-RISE-2019-2022">
    <img src="https://user-images.githubusercontent.com/59824937/146353317-56b3e70e-aed9-40e0-9212-3393d2e0ddd9.png" height="100"/>
    </a>
    </div>
    This software is developed by:
    <div>
    <img src="https://www.umr-lops.fr/var/storage/images/_aliases/logo_main/medias-ifremer/medias-lops/logos/logo-lops-2/1459683-4-fre-FR/Logo-LOPS-2.png" height="75"/>
    <a href="https://wwz.ifremer.fr"><img src="https://user-images.githubusercontent.com/59824937/146353099-bcd2bd4e-d310-4807-aee2-9cf24075f0c3.jpg" height="75"/></a>
    <img src="https://github.com/euroargodev/euroargodev.github.io/raw/master/img/logo/ArgoFrance-logo_banner-color.png" height="75"/>
    </div>

url = https://github.com/euroargodev/VirtualFleet
classifiers =
    License :: OSI Approved :: Apache Software License
    Programming Language :: Python :: 3.8
    Topic :: Scientific/Engineering
    Intended Audience :: Science/Research
    Operating System :: OS Independent
    Development Status :: 3 - Alpha

[options]
packages = find:
exclude = './binder, ./docs, ./.github, ./examples, ./local_work, ./__pycache__, ./.coveragerc'
zip_safe = False  # https://mypy.readthedocs.io/en/latest/installed_packages.html
include_package_data = True
python_requires = >=3.8

install_requires =
    numpy >= 1.18
    pandas >= 1.1
    xarray >= 0.16.0
#     parcels >= 2.3.0

[options.extras_require]
io =
    netCDF4
    h5netcdf
    scipy
    gcsfs
    numcodecs
    cftime
    cfgrib
    lz4
    python-blosc
    nomkl
    erddapy
    argopy
    gitpython

accel =
    scipy
    bottleneck
    numbagg
    distributed

viz =
    matplotlib
    seaborn
    nc-time-axis
    nbserverproxy
    jupyter
    jupyterlab>=0.35
    jupyterlab_launcher
    jupyter_client
    jupyter_server
    nb_conda_kernels
    ipykernel
    ipywidgets
    graphviz
    nodejs
    scikit-image
    scikit-learn
    watermark
    shapely
    cartopy>=0.19.0
    cmocean
    progressbar
    cgen
    pymbolic
    tqdm

complete =
    %(io)s
    %(accel)s
    %(viz)s

docs =
    %(complete)s
    sphinx-autosummary-accessors
    sphinx_rtd_theme
    sphinx_book_theme
    sphinx_issues
    ipython
    ipykernel
    jupyter-client
    nbsphinx
    scanpydoc

[flake8]
ignore =
    E203 # whitespace before ':' - doesn't work well with black
    E402 # module level import not at top of file
    E501 # line too long - let black worry about that
    E731 # do not assign a lambda expression, use a def
    W503 # line break before binary operator
exclude=
    .eggs
    docs
