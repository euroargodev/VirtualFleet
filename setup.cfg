[metadata]
name = virtualfleet
author = VirtualFleet Developers
author_email = 'kbalem@ifremer.fr, gmaze@ifremer.fr'
license = Apache
description = Virtual Argo float trajectories simulator
long_description_content_type=text/x-rst
long_description =
    **virtualfleet** is an open source project and Python package
    that makes simulations of virtual Argo float trajectories.

    Using a 3D velocity fields, program your own Argo floats behaviour, set-up a
    deployment plan and simulate trajectories (and sampling) of your virtual
    fleet of Argo floats.

    "Virtual Fleet" uses `Parcels <http://oceanparcels.org>`_ to simulate Argo floats and to compute trajectories.
    "Virtual Fleet" provides methods to easily set-up a deployment plan and to analyse trajectories.

    Why Virtual Fleet?
    ------------------
    The design of the Argo array is quite complex to determine in specific regions, where the local ocean dynamic shifts
    away from *standard* large scale open ocean. These regions are typically the Western Boundary Currents where turbulence is more
    significant than anywhere else, and Polar regions where floats can temporarily evolve under sea-ice. **Virtual Fleet** aims to help
    the Argo program to optimise floats deployment and programming in such regions.

    Learn more
    ----------
    - Documentation: `<https://euroargodev.github.io/VirtualFleet>`_
    - Issue tracker: `<https://github.com/euroargodev/VirtualFleet/issues>`_
    - Source code: `<https://github.com/euroargodev/VirtualFleet>`_
    - Parcels: `<http://oceanparcels.org>`_

url = https://github.com/euroargodev/VirtualFleet
classifiers =
    License :: OSI Approved :: Apache Software License
    Programming Language :: Python :: 3.8
    Topic :: Scientific/Engineering
    Intended Audience :: Science/Research
    Operating System :: OS Independent
    Development Status :: 3 - Alpha

[options]
packages = find:
zip_safe = False  # https://mypy.readthedocs.io/en/latest/installed_packages.html
include_package_data = True
python_requires = >=3.8
install_requires =
    numpy >= 1.18
    pandas >= 1.1
    xarray >= 0.16.0
    parcels == git+https://github.com/OceanParcels/parcels.git@v2.3.0

[options.extras_require]
io =
    netCDF4
    h5netcdf
    scipy
    gcsfs
    numcodecs
    cftime
    cfgrib
    lz4
    python-blosc
    nomkl
    erddapy
    argopy
    gitpython

accel =
    scipy
    bottleneck
    numbagg
    distributed
    dask-kubernetes

viz =
    matplotlib
    seaborn
    nc-time-axis
    nbserverproxy
    jupyter
    jupyterlab>=0.35
    jupyterlab_launcher
    jupyter_client
    jupyter_server
    nb_conda_kernels
    ipykernel
    ipywidgets
    graphviz
    nodejs
    scikit-image
    scikit-learn
    watermark
    shapely
    cartopy>=0.19.0
    cmocean
    progressbar
    cgen
    pymbolic

complete =
    %(io)s
    %(accel)s
    %(viz)s

docs =
    %(complete)s
    sphinx-autosummary-accessors
    sphinx_rtd_theme
    sphinx_book_theme
    sphinx_issues
    ipython
    ipykernel
    jupyter-client
    nbsphinx
    scanpydoc

[flake8]
ignore =
    E203 # whitespace before ':' - doesn't work well with black
    E402 # module level import not at top of file
    E501 # line too long - let black worry about that
    E731 # do not assign a lambda expression, use a def
    W503 # line break before binary operator
exclude=
    .eggs
    doc
